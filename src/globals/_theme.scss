$theme-map: null;
$title-font: "";
$theme-font: "Work Sans";
$page-minimum-width: 0px;

$primary: "primary";
$sub-primary: "sub-primary";
$background-center: "background-center";
$background-sides: "background-sides";
$text-color: "text-color";
$border-color: "border-color";
$container-color: "container-color";
$shadow-color: "shadow-color";
$background: "background";

$themes: (
  light: (
    primary: #87b1ac,
    sub-primary: #0863a0,
    background-center: white,
    background-sides: #f5f4ec,
    background: #f3f1e3,
    text-color: #62807d,
    border-color: black,
    container-color: #f1e6d8,
    shadow-color: rgba(106, 106, 106, 0.6),
  ),
  dark: (
    primary: #123f5a,
    sub-primary: #d4eeff,
    background-center: #063b5f,
    background-sides: #02141e,
    background: rgb(6, 22, 40),
    text-color: #dcdff1,
    border-color: #f5f4ec,
    container-color: #01131d,
    shadow-color: rgba(0, 0, 0, 0.6),
  ),
);

@mixin themed() {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key) {
  @return map-get($theme-map, $key);
}

.fade-in {
  opacity: 0;
  animation-name: fade-in;
  animation-duration: 0.4s;
  animation-delay: 0.1s;
  animation-fill-mode: forwards;

  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}
$theme-transition: 1.5s;
.block {
  position: absolute;
  content: "";
  transition: all 0.15s, background-color $theme-transition;
}
.bottom {
  bottom: -17px;
  height: 17px;
  width: 100%;
  left: 8px;
  transform: skewX(45deg);
  transition: all $theme-transition;
  @include themed() {
    background-color: darken(t($primary), 16%);
  }
}
.side {
  right: -17px;
  height: 100.1%;
  width: 17px;
  bottom: -9px;
  transform: skewY(45deg);
  transition: all $theme-transition;
  @include themed() {
    background-color: darken(t($primary), 25%);
  }
}
:export {
  theme-transition: $theme-transition;
}
